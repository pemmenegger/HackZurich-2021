{"version":3,"sources":["components/stateless.js","components/Slider.jsx","components/api.js","pages/Questions.jsx","pages/Article.jsx","App.js","reportWebVitals.js","index.js"],"names":["Question","props","className","children","StickyBottom","Logo","src","process","title","alt","OrSeparator","SelectedIcon","Button","value","onClick","ButtonPrimary","ButtonSecondary","ButtonSelect","isSelected","StoryCard","headline","subheadline","imgUrl","theme","createTheme","palette","primary","main","secondary","light","contrastText","contrastThreshold","tonalOffset","CustomizedSlider","Slider","min","step","max","onChange","event","newValue","color","api","axios","create","baseURL","headers","handleError","error","response","status","match","info","request","responseURL","data","message","console","log","alert","Questions","state","time","format","stories","newStep","this","setState","newTime","newFormat","a","requestBody","JSON","stringify","interests","post","parse","body","storyIds","changeStep","storyId","history","push","changeTime","changeFormat","requestStories","openStory","id","lead","thumbnail","TransitionGroup","CSSTransition","timeout","classNames","exit","renderCurrentQuestion","React","Component","withRouter","Article","App","render","location","path","component","to","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6adfa971.chunk.js","sourcesContent":["import React from 'react';\n\nexport const Question = (props) => {\n    return (\n        <div className=\"font-body\">\n            {props.children}\n        </div>\n    )\n}\n\nexport const StickyBottom = (props) => {\n    return (\n        <div className=\"absolute bottom-6 w-11/12\">\n            {props.children}\n        </div>\n    )\n}\n\nexport const Logo = (props) => {\n    return (\n        <img\n          src={process.env.PUBLIC_URL +'/logo.png'}\n          title=\"Story Hub\"\n          className=\"mt-12 mb-9 mr-auto ml-auto w-16 h-auto\"\n          alt=\"Story Hub Logo\"\n        />\n    )\n}\n\nexport const OrSeparator = (props) => {\n    return (\n        <div className=\"or-separator\">\n            <p>or</p>\n        </div>\n    )\n}\n\nexport const SelectedIcon = (props) => {\n    return (\n        <img\n          src={process.env.PUBLIC_URL +'/selected.png'}\n          title=\"Selected\"\n          className={props.className}\n          alt=\"Selected\"\n        />\n    )\n}\n\n\n/**\n * BUTTONS\n */\n\nconst Button = (props) => {\n    const {\n        value,\n        onClick,\n        className,\n    } = props;\n\n    return (\n        <div onClick={() => onClick()} className={\"w-full mb-4 pt-4 pb-4 rounded-lg text-m font-semibold \" + className}>\n            {value}\n        </div>\n    )\n}\n\nexport const ButtonPrimary = (props) => {\n    return (\n        <Button {...props} className=\"bg-violett text-white text-center\"/>\n    )\n}\n\nexport const ButtonSecondary = (props) => {\n    return (\n        <Button {...props} className=\"bg-white text-black border border-black text-center\" />\n    )\n}\n\nexport const ButtonSelect = (props) => {\n    const {\n        isSelected\n    } = props;\n    return (\n        <div className=\"relative h-70\">\n            <Button {...props} className=\"bg-lightGrey text-black text-left pl-4\" />\n            {isSelected ? <SelectedIcon className=\"h-5 w-auto absolute right-0 top-1/2 transform -translate-y-1/2 mr-4\" /> : null}            \n        </div>\n    )\n}\n\n/**\n * CARDS\n */\n\nexport const StoryCard = (props) => {\n    const {\n        headline,\n        subheadline,\n        imgUrl,\n        onClick,\n    } = props;\n    return (\n        <div className=\"relative h-52 rounded-lg overflow-hidden mb-4\" onClick={onClick}>\n            <img\n                src={imgUrl}\n                title=\"Story Preview Thumbnail\"\n                className=\"w-full h-full absolute top-0 left-0 object-cover object-center\"\n                alt=\"Story Preview Thumbnail\"\n            />\n            <div className=\"absolute w-full h-full bg-black opacity-40 z-10\"></div>\n            <div className=\"absolute z-20 bottom-0 pl-3 pr-3 pb-5\">\n                <p className=\"text-white text-s pb-2\">{subheadline}</p>\n                <p className=\"text-white text-l font-semibold\">{headline}</p>\n            </div>\n        </div>\n    )\n}","import * as React from 'react';\nimport Slider from '@mui/material/Slider';\nimport { createTheme } from '@mui/material/styles';\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      // light: will be calculated from palette.primary.main,\n      main: '#222222',\n      // dark: will be calculated from palette.primary.main,\n      // contrastText: will be calculated to contrast with palette.primary.main\n    },\n    secondary: {\n      light: '#222222',\n      main: '#222222',\n      // dark: will be calculated from palette.secondary.main,\n      contrastText: '#222222',\n    },\n    // Used by `getContrastText()` to maximize the contrast between\n    // the background and the text.\n    contrastThreshold: 3,\n    // Used by the functions below to shift a color's luminance by approximately\n    // two indexes within its tonal palette.\n    // E.g., shift from Red 500 to Red 300 or Red 700.\n    tonalOffset: 0.2,\n  },\n});\n\n\nconst CustomizedSlider = (props) => {\n\n  const handleChange = (event, newValue) => {\n    if (typeof newValue === 'number') {\n      props.onChange(newValue)\n    }\n  };\n\n  return (\n    <Slider\n        value={props.value}\n        min={props.min}\n        step={props.step}\n        max={props.max}\n        onChange={handleChange}\n        aria-labelledby=\"non-linear-slider\"\n        color=\"primary\"\n        theme={theme}\n    />\n  );\n}\n\nexport { CustomizedSlider as Slider };","import axios from 'axios';\n\nexport const api = axios.create({\n  baseURL: 'https://hbr26fk6lf.execute-api.eu-central-1.amazonaws.com',\n  headers: { 'Content-Type': 'application/json' }\n});\n\nexport const handleError = error => {\n  const response = error.response;\n\n  // catch 4xx and 5xx status codes\n  if (response && !!`${response.status}`.match(/^[4|5]\\d{2}$/)) {\n    let info = `\\nrequest to: ${response.request.responseURL}`;\n\n    if (response.data.status) {\n      info += `\\nstatus code: ${response.data.status}`;\n      info += `\\nerror: ${response.data.error}`;\n      info += `\\nerror message: ${response.data.message}`;\n    } else {\n      info += `\\nstatus code: ${response.status}`;\n      info += `\\nerror message:\\n${response.data}`;\n    }\n\n    console.log('The request was made and answered but was unsuccessful.', error.response);\n    return info;\n  } else {\n    if (error.message.match(/Network Error/)) {\n      alert('The server cannot be reached.\\nDid you start it?');\n    }\n\n    console.log('Something else happened.', error);\n    return error.message;\n  }\n};\n\nexport const getErrorMessage = error => {\n  var errorMsg = null;\n  if(error.response && error.response.data && error.response.data.message) {\n      errorMsg = error.response.data.message\n  } else {\n      errorMsg = \"Uups... there was a server error!\"\n  }\n  return errorMsg;\n}","import React from \"react\";\nimport {\n  Question,\n  StickyBottom,\n  ButtonPrimary,\n  ButtonSecondary,\n  Logo,\n  OrSeparator,\n  ButtonSelect,\n  StoryCard\n} from \"../components/stateless.js\";\nimport { Slider } from \"../components/Slider\";\nimport { withRouter } from \"react-router-dom\";\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\nimport { api, handleError } from '../components/api.js';\n\nclass Questions extends React.Component {\n\t\n\tconstructor() {\n\t\tsuper();\n        this.state = {\n            step: 'time',\n            time: 15,\n            format: 'best-experience',\n            stories: null\n        };\n\t}\n\n    changeStep(newStep) {\n        this.setState({\n            step: newStep\n        })\n    }\n\n    changeTime(newTime) {\n        this.setState({\n            time: newTime\n        })\n    }\n\n    changeFormat(newFormat) {\n        this.setState({\n            format: newFormat\n        })\n    }\n\n    async requestStories() {\n        try {\n            const requestBody = JSON.stringify({\n                time: this.state.time * 60,\n                format: this.state.format,\n                interests: [\n                    \"Europe\",\n                    \"Technology\"\n                ]\n            });\n            const response = await api.post(`/stage/selectStories`, requestBody);\n            let data = JSON.parse(response.data.body)\n            this.setState({\n                stories: data.storyIds\n            })\n            console.log(this.state.stories)\n        } catch (error) {\n            handleError(error)\n            console.log(error)\n        } finally {\n            this.changeStep('story')\n        }\n    }\n\n    openStory(storyId) {\n      console.log(storyId)\n        this.props.history.push(`/story/${storyId}`)\n    }   \n\n    renderCurrentQuestion() {\n        let step = this.state.step;\n        switch(step) {\n            case 'time':\n                return (\n                    <Question>\n                        <h1 className=\"font-body text-xl text-center font-normal mb-8\">\n                            <h1>I have time for about <span className=\"font-semibold\">{this.state.time} Minutes</span></h1>\n                        </h1>\n                        <div className=\"mt-0 mb-0 mr-auto ml-auto w-10/12\">\n                          <Slider \n                            min={1}\n                            max={30}\n                            step={1}\n                            value={this.state.time} \n                            onChange={(newValue) => this.changeTime(newValue)}\n                          />\n                        </div>\n                        <StickyBottom>\n                            <ButtonPrimary value=\"Next\" onClick={() => this.changeStep('mood')}/>\n                        </StickyBottom>\n                    </Question>\n                )\n            case 'mood':\n                return (\n                    <Question>\n                        <h1 className=\"font-body text-xl text-center font-normal mb-8\">\n                            <h1>What do you <span className=\"font-semibold\">like</span> right now?</h1>\n                        </h1>\n\n                        <ButtonSelect value=\"Best experience\" isSelected={this.state.format === 'best-experience'} onClick={() => this.changeFormat('best-experience')}/>\n                        <ButtonSelect value=\"Only Videos\" isSelected={this.state.format === 'only-videos'} onClick={() => this.changeFormat('only-videos')}/>\n                        <ButtonSelect value=\"Only Audios\" isSelected={this.state.format === 'only-audios'} onClick={() => this.changeFormat('only-audios')}/>\n\n                        <StickyBottom>\n                            <ButtonPrimary value=\"Next\" onClick={() => this.requestStories()}/>\n                        </StickyBottom>\n                    </Question>\n                )\n            case 'story':\n                return (\n                    <Question>\n                        <h1 className=\"font-body text-xl text-center font-normal mb-8\">\n                            <h1>Choose your <span className=\"font-semibold\">story</span></h1>\n                        </h1>\n                        <StoryCard \n                            onClick={() => this.openStory(this.state.stories[0].id)}\n                            headline={this.state.stories[0].title}\n                            subheadline={this.state.stories[0].lead}\n                            imgUrl={this.state.stories[0].thumbnail}\n                        /> \n                        <StoryCard \n                            onClick={() => this.openStory(this.state.stories[1].id)}\n                            headline={this.state.stories[1].title}\n                            subheadline={this.state.stories[1].lead}\n                            imgUrl={this.state.stories[1].thumbnail}\n                        /> \n                        <OrSeparator/>\n                        <ButtonSecondary \n                            value=\"Explore\"\n                            onClick={() => this.openStory(this.state.stories[2].id)}\n                        />\n                        <ButtonSecondary value=\"Daily News\"/>\n                        <div className=\"mb-12\"></div>\n                    </Question>\n                )\n            default: \n                return <p>No step</p>\n        }\n    }\n\t\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"mt-0 mb-0 mr-auto ml-auto w-11/12\">\n\t\t\t\t<Logo />\n        <TransitionGroup>\n            <CSSTransition key={this.state.step} timeout={400} classNames=\"fade\" exit={false} >\n                {this.renderCurrentQuestion()}\n            </CSSTransition>\n        </TransitionGroup>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default withRouter(Questions);","import React from \"react\";\n\nconst Article = () => {\n  return (\n    <>\n      <div className=\"w-full h-screen bg-black\">test</div>\n    </>\n  );\n};\n\nexport default Article;\n","import \"./App.css\";\nimport { BrowserRouter, Redirect, Route, Switch } from \"react-router-dom\";\nimport Questions from \"./pages/Questions\";\nimport Article from \"./pages/Article\";\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Route\n        render={({ location }) => {\n          return (\n            <Switch location={location}>\n              <Route path=\"/questions\" component={Questions} />\n              <Route path=\"/story/:id\" component={Article} />\n              <Redirect to=\"/questions\" />\n            </Switch>\n          );\n        }}\n      />\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}