{"version":3,"sources":["components/stateless.js","components/StoryCard.jsx","components/Slider.jsx","pages/Questions.jsx","pages/Article.jsx","App.js","reportWebVitals.js","index.js"],"names":["Question","props","className","children","QuestionTitle","Logo","OrSeparator","Button","isSubmitting","value","onClick","theme","ButtonPrimary","ButtonSecondary","ButtonSelect","isSelected","StoryCard","style","backgroundImage","this","imgUrl","backgroundPosition","backgroundSize","backgroundRepeat","subheadline","headline","React","Component","createTheme","palette","primary","main","secondary","light","contrastText","contrastThreshold","tonalOffset","StoryHubSlider","setValue","Box","sx","width","Typography","id","gutterBottom","Slider","min","step","max","onChange","event","newValue","color","Questions","state","format","newView","setState","newFormat","changeView","changeFormat","TransitionGroup","CSSTransition","timeout","classNames","exit","renderCurrentQuestion","withRouter","Article","App","render","location","path","component","to","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c4c14d11.chunk.js","sourcesContent":["import React from 'react';\n\nexport const Question = (props) => {\n    return (\n        <div className=\"question\">\n            {props.children}\n        </div>\n    )\n}\n\nexport const QuestionTitle = (props) => {\n    return (\n        <div className=\"title\">\n            {props.children}\n        </div>\n    )\n}\n\nexport const Logo = (props) => {\n    return (\n        <div className=\"logo\">\n            {props.children}\n        </div>\n    )\n}\n\nexport const OrSeparator = (props) => {\n    return (\n        <div className=\"or-separator\">\n            <p>or</p>\n        </div>\n    )\n}\n\n/**\n * ICONS\n */\n\nconst Icon = (props) => {\n    const {\n        onClick,\n        icon,\n    } = props;\n    return (\n        <div onClick={() => onClick()} className={\"icon \" + icon}></div>\n    )\n}\n\nexport const CloseIcon = (props) => {\n    return (\n        <Icon {...props} icon=\"close-icon\"/>\n    )\n}\n\nexport const SettingsIcon = (props) => {\n    return (\n        <Icon {...props} icon=\"settings-icon\"/>\n    )\n}\n\n/**\n * BUTTONS\n */\n\nconst Button = (props) => {\n    const {\n        isSubmitting,\n        value,\n        onClick,\n        theme,\n    } = props;\n    return (\n        <button onClick={() => onClick()} className={theme}>\n            {isSubmitting ? <div className=\"loadingSubmit\"></div> : value}\n        </button>\n    )\n}\n\nexport const ButtonPrimary = (props) => {\n    return (\n        <Button {...props} theme=\"btn-primary\"/>\n    )\n}\n\nexport const ButtonSecondary = (props) => {\n    return (\n        <Button {...props} theme=\"btn-secondary\" />\n    )\n}\n\nexport const ButtonSelect = (props) => {\n    const {\n        isSelected\n    } = props;\n    return (\n        <div className=\"btn-select-wrapper\">\n            <Button {...props} theme=\"btn-select\" />\n            {isSelected ? <div className=\"icon-select\"></div> : null}            \n        </div>\n    )\n}","import React from \"react\";\n\nclass StoryCard extends React.Component {\n  constructor() {\n    super();\n  }\n\n  render() {\n    return (\n      <div className=\"story-card\">\n        <div\n          className=\"wrapper\"\n          style={{\n            backgroundImage: \"url(\" + this.props.imgUrl + \")\",\n            backgroundPosition: \"center\",\n            backgroundSize: \"cover\",\n            backgroundRepeat: \"no-repeat\",\n          }}\n        >\n          <div className=\"overlay\"></div>\n          <div className=\"headlines\">\n            <p className=\"subheadline\">{this.props.subheadline}</p>\n            <p className=\"headline\">{this.props.headline}</p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default StoryCard;\n","import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport Slider from '@mui/material/Slider';\n\nimport { createTheme } from '@mui/material/styles';\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      // light: will be calculated from palette.primary.main,\n      main: '#222222',\n      // dark: will be calculated from palette.primary.main,\n      // contrastText: will be calculated to contrast with palette.primary.main\n    },\n    secondary: {\n      light: '#222222',\n      main: '#222222',\n      // dark: will be calculated from palette.secondary.main,\n      contrastText: '#222222',\n    },\n    // Used by `getContrastText()` to maximize the contrast between\n    // the background and the text.\n    contrastThreshold: 3,\n    // Used by the functions below to shift a color's luminance by approximately\n    // two indexes within its tonal palette.\n    // E.g., shift from Red 500 to Red 300 or Red 700.\n    tonalOffset: 0.2,\n  },\n});\n\n\nexport default function StoryHubSlider() {\n  const [value, setValue] = React.useState(15);\n\n  const handleChange = (event, newValue) => {\n    if (typeof newValue === 'number') {\n      setValue(newValue);\n    }\n  };\n\n  return (\n    <Box sx={{ width: '100%' }} className=\"slider-box\">\n        <div className=\"label\">\n            <Typography id=\"non-linear-slider\" gutterBottom> \n                {value} Min\n            </Typography>\n        </div>\n        <div className=\"slider\">\n            <Slider\n                value={value}\n                min={1}\n                step={1}\n                max={30}\n                onChange={handleChange}\n                aria-labelledby=\"non-linear-slider\"\n                color=\"primary\"\n                theme={theme}\n            />\n         </div>\n    </Box>\n  );\n}","import React from \"react\";\nimport {\n  Question,\n  QuestionTitle,\n  ButtonPrimary,\n  ButtonSecondary,\n  Logo,\n  OrSeparator,\n  ButtonSelect,\n} from \"../components/stateless.js\";\nimport StoryCard from \"../components/StoryCard\";\nimport Slider from \"../components/Slider\";\nimport { withRouter } from \"react-router-dom\";\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\n\nclass Questions extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      step: \"time\",\n      format: \"best-experience\",\n    };\n  }\n\n  changeView(newView) {\n    this.setState({\n      step: newView,\n    });\n  }\n\n  changeFormat(newFormat) {\n    this.setState({\n      format: newFormat,\n    });\n  }\n\n  renderCurrentQuestion() {\n    let step = this.state.step;\n    switch (step) {\n      case \"time\":\n        return (\n          <Question>\n            <QuestionTitle>\n              <h1>\n                How much <span>time</span> do you have?\n              </h1>\n            </QuestionTitle>\n            <Slider />\n            <div className=\"sticky-bottom\">\n              <ButtonPrimary\n                value=\"Next\"\n                onClick={() => this.changeView(\"mood\")}\n              />\n            </div>\n          </Question>\n        );\n      case \"mood\":\n        return (\n          <Question>\n            <QuestionTitle>\n              <h1>\n                What do you <span>like</span> right now?\n              </h1>\n            </QuestionTitle>\n\n            <ButtonSelect\n              value=\"Best experience\"\n              isSelected={this.state.format === \"best-experience\"}\n              onClick={() => this.changeFormat(\"best-experience\")}\n            />\n            <ButtonSelect\n              value=\"Only Videos\"\n              isSelected={this.state.format === \"only-videos\"}\n              onClick={() => this.changeFormat(\"only-videos\")}\n            />\n            <ButtonSelect\n              value=\"Only Audios\"\n              isSelected={this.state.format === \"only-audios\"}\n              onClick={() => this.changeFormat(\"only-audios\")}\n            />\n\n            <div className=\"sticky-bottom\">\n              <ButtonPrimary\n                value=\"Next\"\n                onClick={() => this.changeView(\"story\")}\n              />\n            </div>\n          </Question>\n        );\n      case \"story\":\n        return (\n          <Question>\n            <QuestionTitle>\n              <h1>\n                Choose your <span>story</span>\n              </h1>\n            </QuestionTitle>\n            <StoryCard\n              headline=\"Mit Satellitenaufnahmen die Probleme der Welt lösen\"\n              subheadline=\"Google Earth Engine\"\n              imgUrl=\"https://www.srf.ch/static/cms/images/1280ws/d7f593.webp\"\n            />\n            <StoryCard\n              headline=\"Corona-Tests sollen kosten – Bundesrat gewährt aber Schonfrist\"\n              subheadline=\"Entscheid zum Covid-Zertifikat\"\n              imgUrl=\"https://www.srf.ch/static/cms/images/1280ws/b8d245.webp\"\n            />\n            <OrSeparator />\n            <ButtonSecondary value=\"Explore\" />\n            <ButtonSecondary value=\"Daily News\" />\n          </Question>\n        );\n      default:\n        return <p>No step</p>;\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"content\">\n        <Logo />\n        <TransitionGroup>\n          <CSSTransition\n            key={this.state.step}\n            timeout={400}\n            classNames=\"fade\"\n            exit={false}\n          >\n            {this.renderCurrentQuestion()}\n          </CSSTransition>\n        </TransitionGroup>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(Questions);\n","import React from \"react\";\n\nconst Article = () => {\n  return <>asdf</>;\n};\n\nexport default Article;\n","import \"./App.css\";\nimport { BrowserRouter, Redirect, Route, Switch } from \"react-router-dom\";\nimport Questions from \"./pages/Questions\";\nimport Article from \"./pages/Article\";\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Route\n        render={({ location }) => {\n          return (\n            <Switch location={location}>\n              <Route path=\"/questions\" component={Questions} />\n              <Route path=\"/article/:id\" component={Article} />\n              <Redirect to=\"/questions\" />\n            </Switch>\n          );\n        }}\n      />\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}